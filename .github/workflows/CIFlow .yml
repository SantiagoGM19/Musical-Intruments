name: CI flow

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:

  build:

    runs-on: ubuntu-latest

    services:
      postgres_db:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: musical_instruments
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Set up Gradle
      uses: gradle/gradle-build-action@v2
      
    - name: Gradle build
      run: |
        chmod +x ./gradlew
        ./gradlew bootJar

    - name: Run tests
      run: ./gradlew test

    - name: Create jar directory
      run: sudo mkdir /app

    - name: Copy jar file
      run: mv build/libs/$(ls build/libs) /app/musical-instruments.jar

    - name: Upload jar file
      uses: actions/upload-artifact@master
      with:
        name: jar-file
        path: musical-instruments.jar

  build-image:

    runs-on: ubuntu-latest
    needs: build

    steps:

    - uses: actions/checkout@v3

    - name: Download jar file
      uses: actions/download-artifact@master
      with:
        name: jar-file
        path: musical-instruments.jar

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push image
      uses: docker/build-push-action@v3
      with:
        push: true
        tags: ${{ secrets.DOCKERHUB_USERNAME }}/musical-instruments-app:latest